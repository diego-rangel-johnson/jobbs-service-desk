-- ========================================
-- VERIFICA√á√ÉO COMPLETA DO SISTEMA DE ATENDENTES
-- Execute no SQL Editor: https://app.supabase.com/project/tjjpwsjrmoisowewebcs/sql/new
-- ========================================

-- üîç 1. VERIFICAR TABELAS CRIADAS
SELECT 'üîç VERIFICANDO TABELAS...' as status;

SELECT 
    table_name as tabela_criada,
    CASE 
        WHEN table_name = 'organizations' THEN '‚úÖ Tabela de organiza√ß√µes'
        WHEN table_name = 'organization_users' THEN '‚úÖ Tabela de usu√°rios das organiza√ß√µes'
        WHEN table_name = 'attendant_organizations' THEN '‚úÖ Tabela principal de atendentes'
        ELSE '‚ùì Outra tabela'
    END as descricao
FROM information_schema.tables 
WHERE table_schema = 'public' 
AND table_name IN ('organizations', 'organization_users', 'attendant_organizations')
ORDER BY table_name;

-- üîß 2. VERIFICAR FUN√á√ïES CRIADAS
SELECT 'üîß VERIFICANDO FUN√á√ïES...' as status;

SELECT 
    routine_name as funcao_criada,
    CASE 
        WHEN routine_name = 'is_attendant' THEN '‚úÖ Verifica se usu√°rio √© atendente'
        WHEN routine_name = 'is_attendant_of_organization' THEN '‚úÖ Verifica permiss√£o espec√≠fica'
        WHEN routine_name = 'promote_user_to_attendant' THEN '‚úÖ Promove usu√°rio a atendente'
        WHEN routine_name = 'set_attendant_organizations' THEN '‚úÖ Define organiza√ß√µes do atendente'
        WHEN routine_name = 'get_attendant_organizations' THEN '‚úÖ Lista organiza√ß√µes do atendente'
        WHEN routine_name = 'get_attendants_with_organizations' THEN '‚úÖ Lista todos os atendentes'
        WHEN routine_name = 'can_view_organization_interactions' THEN '‚úÖ Controle de acesso'
        ELSE '‚ùì Outra fun√ß√£o'
    END as descricao
FROM information_schema.routines 
WHERE routine_schema = 'public' 
AND routine_name LIKE '%attendant%'
ORDER BY routine_name;

-- üìä 3. VERIFICAR ORGANIZA√á√ïES DE EXEMPLO
SELECT 'üìä VERIFICANDO ORGANIZA√á√ïES...' as status;

SELECT 
    name as organizacao,
    slug,
    plan_type,
    created_at,
    '‚úÖ Dados de exemplo criados' as status
FROM public.organizations
ORDER BY name;

-- üõ°Ô∏è 4. VERIFICAR RLS ATIVADO
SELECT 'üõ°Ô∏è VERIFICANDO RLS...' as status;

SELECT 
    tablename as tabela,
    CASE 
        WHEN rowsecurity = true THEN '‚úÖ RLS Ativado'
        ELSE '‚ùå RLS Desativado'
    END as rls_status
FROM pg_tables 
WHERE schemaname = 'public' 
AND tablename IN ('organizations', 'organization_users', 'attendant_organizations')
ORDER BY tablename;

-- üß™ 5. TESTAR FUN√á√ïES B√ÅSICAS
SELECT 'üß™ TESTANDO FUN√á√ïES...' as status;

-- Testar fun√ß√£o is_attendant (deve retornar false para UUID aleat√≥rio)
SELECT 
    'is_attendant' as funcao_testada,
    public.is_attendant(gen_random_uuid()) as resultado,
    'Deve retornar FALSE para UUID aleat√≥rio' as esperado;

-- ‚öôÔ∏è 6. VERIFICAR √çNDICES
SELECT '‚öôÔ∏è VERIFICANDO √çNDICES...' as status;

SELECT 
    indexname as indice,
    tablename as tabela,
    '‚úÖ √çndice criado para performance' as status
FROM pg_indexes 
WHERE schemaname = 'public' 
AND indexname = 'idx_attendant_organizations_organization_id';

-- üîí 7. VERIFICAR POL√çTICAS RLS
SELECT 'üîí VERIFICANDO POL√çTICAS...' as status;

SELECT 
    tablename as tabela,
    policyname as politica,
    cmd as operacao,
    '‚úÖ Pol√≠tica RLS ativa' as status
FROM pg_policies 
WHERE schemaname = 'public' 
AND tablename IN ('organizations', 'organization_users', 'attendant_organizations')
ORDER BY tablename, policyname;

-- üìà 8. ESTRUTURA DAS TABELAS
SELECT 'üìà VERIFICANDO ESTRUTURA...' as status;

-- Estrutura da tabela attendant_organizations
SELECT 
    column_name as coluna,
    data_type as tipo,
    is_nullable as permite_null,
    '‚úÖ Coluna da tabela attendant_organizations' as status
FROM information_schema.columns 
WHERE table_schema = 'public' 
AND table_name = 'attendant_organizations'
ORDER BY ordinal_position;

-- üìã 9. RESUMO FINAL
SELECT 'üìã RESUMO FINAL...' as status;

-- Contar elementos criados
SELECT 
    'RESUMO GERAL' as categoria,
    (SELECT COUNT(*) FROM information_schema.tables 
     WHERE table_schema = 'public' 
     AND table_name IN ('organizations', 'organization_users', 'attendant_organizations')) as tabelas_criadas,
    (SELECT COUNT(*) FROM information_schema.routines 
     WHERE routine_schema = 'public' 
     AND routine_name LIKE '%attendant%') as funcoes_criadas,
    (SELECT COUNT(*) FROM pg_policies 
     WHERE schemaname = 'public' 
     AND tablename IN ('organizations', 'organization_users', 'attendant_organizations')) as politicas_rls,
    (SELECT COUNT(*) FROM public.organizations) as organizacoes_exemplo;

-- üéØ 10. TESTE DE INTEGRA√á√ÉO COMPLETO
SELECT 'üéØ TESTE DE INTEGRA√á√ÉO...' as status;

-- Verificar se pode criar um atendente de teste (simula√ß√£o)
SELECT 
    'Sistema pronto para uso' as status,
    CASE 
        WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'attendant_organizations')
        AND EXISTS (SELECT 1 FROM information_schema.routines WHERE routine_name = 'promote_user_to_attendant')
        AND EXISTS (SELECT 1 FROM public.organizations)
        THEN '‚úÖ SISTEMA COMPLETO E FUNCIONAL'
        ELSE '‚ùå Sistema incompleto'
    END as resultado_final;

-- ========================================
-- üéâ INTERPRETA√á√ÉO DOS RESULTADOS
-- ========================================
/*
‚úÖ SINAIS DE SUCESSO ESPERADOS:
- 3 tabelas criadas: organizations, organization_users, attendant_organizations
- 6+ fun√ß√µes com "attendant" no nome
- 3 organiza√ß√µes de exemplo
- RLS = true para todas as tabelas
- Pol√≠ticas RLS criadas
- √çndice idx_attendant_organizations_organization_id
- Status final: "SISTEMA COMPLETO E FUNCIONAL"

‚ùå SE ALGO ESTIVER FALTANDO:
- Reexecute o arquivo: SISTEMA_ATENDENTES_SQL_COMPLETO.sql
- Verifique se n√£o houve erro na execu√ß√£o
- Confirme que executou no projeto correto: tjjpwsjrmoisowewebcs

üöÄ SE TUDO ESTIVER OK:
- Sistema de atendentes 100% funcional
- Pronto para uso em produ√ß√£o
- Interface React pode ser usada
- Fun√ß√µes SQL dispon√≠veis
*/

-- ========================================
-- üéØ EXEMPLOS DE USO (AP√ìS VERIFICA√á√ÉO)
-- ========================================
/*
-- Exemplo 1: Verificar se usu√°rio √© atendente
SELECT public.is_attendant('user-uuid-aqui');

-- Exemplo 2: Listar organiza√ß√µes de exemplo
SELECT * FROM public.organizations;

-- Exemplo 3: Promover usu√°rio a atendente (quando tiver usu√°rios)
-- SELECT promote_user_to_attendant('user-uuid', 'org-uuid');

-- Exemplo 4: Listar todos os atendentes
SELECT * FROM get_attendants_with_organizations();
*/ 