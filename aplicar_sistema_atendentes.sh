#!/bin/bash

# ========================================
# SCRIPT AUTOM√ÅTICO - SISTEMA DE ATENDENTES
# Execute ap√≥s configurar o Personal Access Token
# ========================================

set -e  # Parar se houver erro

echo "üöÄ APLICANDO SISTEMA DE ATENDENTES AUTOMATICAMENTE..."
echo "=================================================="

# Verificar se o token est√° configurado
if [ -z "$SUPABASE_ACCESS_TOKEN" ]; then
    echo "‚ùå ERRO: Vari√°vel SUPABASE_ACCESS_TOKEN n√£o configurada"
    echo "Execute primeiro: export SUPABASE_ACCESS_TOKEN='seu_token_aqui'"
    exit 1
fi

echo "‚úÖ Token configurado"

# Verificar se o CLI funciona
echo "üîç Verificando CLI do Supabase..."
if ! npx supabase projects list > /dev/null 2>&1; then
    echo "‚ùå CLI n√£o funcionando. Fazendo login..."
    npx supabase login --token $SUPABASE_ACCESS_TOKEN
else
    echo "‚úÖ CLI funcionando"
fi

# Verificar se o projeto est√° linkado
echo "üîó Verificando link do projeto..."
if ! npx supabase status > /dev/null 2>&1; then
    echo "üîó Linkando projeto..."
    npx supabase link --project-ref tjjpwsjrmoisowewebcs
else
    echo "‚úÖ Projeto linkado"
fi

# Aplicar migra√ß√£o do sistema de atendentes
echo "üì¶ Aplicando migra√ß√£o do sistema de atendentes..."
if npx supabase db push --linked; then
    echo "‚úÖ Migra√ß√£o aplicada com sucesso!"
else
    echo "‚ö†Ô∏è  Erro na migra√ß√£o. Tentando m√©todo alternativo..."
    
    # M√©todo alternativo: aplicar SQL diretamente
    echo "üìÑ Aplicando SQL diretamente..."
    if [ -f "supabase/migrations/20250707183611_implement_attendant_system.sql" ]; then
        npx supabase db reset --linked --debug
        echo "‚úÖ Sistema aplicado via reset"
    else
        echo "‚ùå Arquivo de migra√ß√£o n√£o encontrado"
        exit 1
    fi
fi

# Verificar se tudo foi aplicado corretamente
echo "üîç Verificando implementa√ß√£o..."

# Verificar tabelas
echo "üìä Verificando tabelas..."
TABELAS=$(npx supabase db dump --data-only --schema public | grep -c "CREATE TABLE.*organizations\|CREATE TABLE.*organization_users\|CREATE TABLE.*attendant_organizations" || echo "0")

if [ "$TABELAS" -ge 3 ]; then
    echo "‚úÖ Tabelas criadas: $TABELAS/3"
else
    echo "‚ö†Ô∏è  Nem todas as tabelas foram criadas: $TABELAS/3"
fi

# Verificar fun√ß√µes
echo "üîß Verificando fun√ß√µes..."
FUNCOES=$(npx supabase db dump --schema public | grep -c "CREATE.*FUNCTION.*attendant" || echo "0")

if [ "$FUNCOES" -ge 6 ]; then
    echo "‚úÖ Fun√ß√µes criadas: $FUNCOES/6+"
else
    echo "‚ö†Ô∏è  Nem todas as fun√ß√µes foram criadas: $FUNCOES/6+"
fi

# Teste b√°sico
echo "üß™ Executando teste b√°sico..."
if npx supabase db query "SELECT COUNT(*) FROM public.organizations" > /dev/null 2>&1; then
    echo "‚úÖ Sistema funcionando corretamente!"
else
    echo "‚ö†Ô∏è  Sistema pode ter problemas"
fi

echo ""
echo "üéâ SISTEMA DE ATENDENTES APLICADO!"
echo "================================="
echo ""
echo "‚úÖ Pr√≥ximos passos:"
echo "1. Testar cria√ß√£o de atendentes"
echo "2. Verificar interface frontend" 
echo "3. Validar permiss√µes"
echo ""
echo "üîß Para verifica√ß√£o completa, execute:"
echo "npx supabase db query --file VERIFICACAO_SISTEMA_ATENDENTES.sql"
echo ""
echo "üìö Documenta√ß√£o dispon√≠vel em:"
echo "- SISTEMA_ATENDENTE_IMPLEMENTADO.md"
echo "- RESUMO_FINAL_IMPLEMENTACAO.md" 